#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Fri Aug  5 20:30:11 2022@author: houda.el-mir"""import osimport json        class LufthansaVariable:    '''    Extract variable data from Lufthansa API    '''    def __init__(self , factory):        self.factory = factory        base_url = "https://api.lufthansa.com/"        def get_flight_route(self, origin, destination, date, write_json = True):                url = self.base_url + 'v1/operations/flightstatus/route/' + origin +'/'+ destination+'/' + date        api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json("get_flight_route_luf" + origin + "_" + destination + "_" + date, api_response)                return api_response         def get_flight_by_flight_number(self, flight_number, date,  write_json = True):                url = self.base_url + 'v1/operations/customerflightinformation/' + flight_number +'/' + date        api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json("get_flight_by_flight_number_luf" + "_" + flight_number  + "_" + date, api_response)                return self.factory.create_request(url)        def pprint(self, response):        print(json.dumps(response, indent=4, sort_keys=True))        def get_flights(self, startDate, endDate, daysOfOperation,flightType ="", airlines = "LH", flightNumberRanges = "",  timeMode = "UTC", origin = "", destination = "" , aircraftTypes = "", write_json = False):                url = self.base_url + "v1/flight-schedules/flightschedules"        if (flightType != ""):            url += "/" + flightType        url += "?"        url = url + "airlines=" + airlines                if flightNumberRanges != "":            url  = url + "&flightNumberRanges=" + flightNumberRanges                    url = url + "&startDate=" + startDate + "&endDate=" + endDate + \        "&daysOfOperation=" + daysOfOperation + \        "&timeMode=" + timeMode                if  origin != "":            "&origin=" + origin         if  destination != "":            "&destination=" + destination        if  aircraftTypes != "":            "&aircraftTypes=" + aircraftTypes                    api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json(" get_flights_lufthansa" + "_" + startDate + "_" + endDate, api_response)                        return  api_response        def __export_json(self, filename, response):                json_dir_name = "tmp_json"        path = os.path.join(os.getcwd(), json_dir_name)        mode = 0o755        if not os.path.exists(json_dir_name):            os.mkdir(path, mode)        filename = path + '/' + filename  + ".json"        print ("Writing file : " + filename)        with open(filename, 'w') as f:            json.dump(response, f)        f.close()