#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Fri Aug  5 20:30:11 2022@author: houda.el-mir"""import jsonimport osimport timeclass LufthansaStatic :    '''    Extract static data from Lufthansa API    '''    def __init__(self , factory):        self.factory = factory       base_url = 'https://api.lufthansa.com/v1/mds-references/'    def get_airport_data_luf(self, iata_airport='', write_json = False ):                if iata_airport== '':            url = self.base_url + 'airports'            #There are 11761 airports            all_airports = 11761            api_response = self.__multi_request(all_airports, url, 'AirportResource')                        else:            url = self.base_url+'airports/'+iata_airport                           api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json("get_airport_data_luf" + "_" + iata_airport, api_response)                return  api_response        def get_aircraft_data_luf(self, aircraft_code='', write_json = False):             if aircraft_code == '':            url = self.base_url + 'aircraft'            #There are 381 types of aircraft            all_aircrafts = 381            api_response = self.__multi_request(all_aircrafts, url, 'AircraftResource')            else:            url = self.base_url+'aircraft/'+aircraft_code            api_response = self.factory.create_request(url)                    if write_json and api_response  != "invalid request":            self.__export_json("get_aircraft_data_luf" + "_" + aircraft_code, api_response)                return api_response            def get_airline_data_luf(self, iata_airline='LH', write_json = False):                if iata_airline == '':            url = self.base_url + 'airlines'        else:            url = self.base_url+'airlines/'+iata_airline                api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json("get_airline_data_luf" + "_" + iata_airline, api_response)                    return api_response            def get_countries_data_luf(self, country_code='', write_json = False):                if country_code == '':            url = self.base_url + 'countries'        #there are 238 countries            all_countries = 238            api_response = self.__multi_request(all_countries, url, 'CountryResource')            else:            url = self.base_url+'countries/' + country_code                if write_json and api_response  != "invalid request":            self.__export_json("get_countries_data_luf" + "_" + country_code, api_response)                      return api_response            def get_cities_data_luf(self, city_code='', write_json = False):                if city_code == '':            url = self.base_url + 'cities'             #there are 10679 cities            all_cities=10679            api_response = self.__multi_request(all_cities, url, 'CityResource')                        else:            url = self.base_url+'cities/' + city_code                        api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json("get_cities_data_luf" + "_" + city_code, api_response)                    return json.dumps(api_response)            def get_nearest_airports_luf(self, long, lat, write_json = False):               url = self.base_url+'airports/nearest/'+str(lat)+','+str(long)        api_response = self.factory.create_request(url)                if write_json and api_response  != "invalid request":            self.__export_json("get_nearest_airports_luf" + "_" + long + "_" + lat, api_response)        return api_response        def pprint(self, response):        print(json.dumps(response, indent=4, sort_keys=True))            def __export_json(self, filename, response):        json_dir_name = "tmp_json"        path = os.path.join(os.getcwd(), json_dir_name)        mode = 0o755        if not os.path.exists(json_dir_name):            os.mkdir(path, mode)        filename = path + '/' + filename  + ".json"        print ("Writing file : " + filename)        with open(filename, 'w') as f:            json.dump(response, f)        f.close()    def __multi_request(self, number_of_elements, url, key):        i = 0        api_response = self.factory.create_request(url + "/?lang=EN&limit=100&offset="+ str(i))[key]        i = 100        while i < number_of_elements:             tmp_url = url + "/?lang=EN&limit=100&offset="+ str(i)            tmp_response = self.factory.create_request(tmp_url)             time.sleep(0.2)            api_response.update(tmp_response)            i += 100        return api_response